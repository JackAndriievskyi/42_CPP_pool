// ************************************************************************** //
//                                                                            //
//                                                        :::      ::::::::   //
//   FragTrap.cpp                                       :+:      :+:    :+:   //
//                                                    +:+ +:+         +:+     //
//   By: yandriie <yandriie@student.unit.ua>        +#+  +:+       +#+        //
//                                                +#+#+#+#+#+   +#+           //
//   Created: 2018/10/04 14:27:24 by yandriie          #+#    #+#             //
//   Updated: 2018/10/05 12:15:09 by yandriie         ###   ########.fr       //
//                                                                            //
// ************************************************************************** //

#include "FragTrap.hpp"
#include <iostream>
#include <sstream>
#include <sys/time.h>

static std::string      serialNumberGen(std::string const &);

FragTrap::FragTrap(void) : _maxHP(TRAP_MAX_HP)
						 , _maxMP(TRAP_MAX_MP)
						 , _meleeDMG(TRAP_MEELE_ATTACK_DMG)
						 , _rangedDMG(TRAP_RANGED_ATTACK_DMG)
						 , _armorRED(TRAP_ARMOR_REDUCTION)
						 , _name(DEF_NAME)
						 , _HP(_maxHP)
						 , _MP(_maxMP)
						 , _lvl(TRAP_LVL) {

    this->_serialNumber = serialNumberGen("");

	std::cout << BOOT_MESSAGE << std::endl;
	std::cout << BOOT_SERIAL_NUMBER_MESSAGE(this->_serialNumber) << std::endl;
}

FragTrap::FragTrap(std::string const &name) : _maxHP(TRAP_MAX_HP)
											, _maxMP(TRAP_MAX_MP)
											, _meleeDMG(TRAP_MEELE_ATTACK_DMG)
											, _rangedDMG(TRAP_RANGED_ATTACK_DMG)
											, _armorRED(TRAP_ARMOR_REDUCTION)
											, _name(name)
											, _HP(_maxHP)
											, _MP(_maxMP)
											, _lvl(1) {

	this->_serialNumber = serialNumberGen("");

	std::cout << BOOT_MESSAGE << std::endl;
	std::cout << BOOT_SERIAL_NUMBER_MESSAGE(this->_serialNumber) << std::endl;
}

FragTrap::~FragTrap() {}

FragTrap::FragTrap(FragTrap const &other) : _maxHP(TRAP_MAX_HP)
										  , _maxMP(TRAP_MAX_MP)
										  , _meleeDMG(TRAP_MEELE_ATTACK_DMG)
										  , _rangedDMG(TRAP_RANGED_ATTACK_DMG)
										  , _armorRED(TRAP_ARMOR_REDUCTION) {

	this->_name = other._name;
	this->_HP = other._HP;
	this->_MP = other._MP;
	this->_lvl = other._lvl;
	this->_serialNumber = serialNumberGen(other._serialNumber);

	std::cout << REPRODUCTION_MESSAGE << std::endl;
	std::cout << BOOT_SERIAL_NUMBER_MESSAGE(this->_serialNumber) << std::endl;
}

FragTrap&		FragTrap::operator=(FragTrap const &other) {

	if (this != &other)
	{
		std::cout << other._name << MIND_TRANSFER_MESSAGE(this->_name)
				  << std::endl;

		std::cout << AFTER_MIND_TRANSFER_MESSAGE(this->_serialNumber)
				  << std::endl;

		std::cout << ((this->_HP > other._HP)
					  ? AFTER_MIND_TRANSFER_HAPPY_MESSAGE
					  : AFTER_MIND_TRANSFER_SAD_MESSAGE) << std::endl;
	}
	this->_name = other._name;
	return *this;
}





static std::string		toString(unsigned int const &);
static unsigned int		rand(unsigned int const &);

unsigned int	FragTrap::vaulthunter_dot_exe(std::string const &name) {

	unsigned int const	(FragTrap::*func)(std::string const &) [] = {
		&FragTrap::_specAttack1,
		&FragTrap::_specAttack2,
		&FragTrap::_specAttack3,
		&FragTrap::_specAttack4,
		&FragTrap::_specAttack5
	}
	
	return this->*func[rand(5)](name);
}

unsigned int	FragTrap::rangedAttack(std::string const &name) const {

	std::cout << ATTACK_MESSAGE(this->_name)
			  << ATTACL_RANGED_MESSAGE(name)
			  << ATTACK_DMG_MESSAGE(toString(this->_rangedDMG))
			  << std::endl;

	return this->_rangedDMG;
}

unsigned int	FragTrap::meleeAttack(std::string const &name) const {

	std::cout << ATTACK_MESSAGE(this->_name)
              << ATTACL_MELEE_MESSAGE(name)
              << ATTACK_DMG_MESSAGE(toString(this->_meleeDMG))
              << std::endl;

    return this->_meleeDMG;
}

void			FragTrap::takeDamage(unsigned int& dmg) {

	if (this->_HP == 0)
		std::cout << DEAD_MESSAGE << std::endl;
	else
	{
		if (this->_HP >= dmg)
			this->_HP -= dmg;
		else
			this->_HP = 0;

		std::cout << RECIEVE_DMG_MESSAGE(this->_name)
				  << RECIEVE_MESSAGE(toString(dmg))
				  << std::endl;

		if (this->_HP == 0)
			std::cout << DEATH_MESSAGE
					  << BIP_BOP_MESSAGE
					  << std::endl;
	}
}

void			FragTrap::beRepaired(unsigned int& heal) {

	if (this->_HP == 0)
		std::cout << DEAD_MESSAGE << std::endl;
	else
	{
		if (this->_HP + heal <= TRAP_MAX_HP)
			this->_HP += heal;
		else
			this->_HP = TRAP_MAX_HP;

		std::cout << RECIEVE_HEAL_MESSAGE(this->_name)
				  << RECIEVE_MESSAGE(toString(dmg))
				  << std::endl;
    }
}





std::string const & FragTrap::getName() const {
    return (this->_name);
}





unsigned int    FragTrap::_specAttack1(std::string const &name) {
	
	std::cout << ATTACK_MESSAGE(this->_name)
              << TRAP_SPEC_ATTACK1_MESSAGE(name)
              << ATTACK_DMG_MESSAGE(toString(this->_meleeDMG * 2))
              << std::endl;

    return (this->_meleeDMG * 2);
}

unsigned int    FragTrap::_specAttack2(std::string const &name) {

	std::cout << ATTACK_MESSAGE(this->_name)
              << TRAP_SPEC_ATTACK2_MESSAGE(name)
              << ATTACK_DMG_MESSAGE(toString(0))
              << std::endl;

    return 0;
}

unsigned int    FragTrap::_specAttack3(std::string const &name) {
	
}

unsigned int    FragTrap::_specAttack4(std::string const &name) {
}

unsigned int    FragTrap::_specAttack5(std::string const &name) {
}





static std::string		_serialNumberGen(std::string const &toGen) {
    return "123" + toGen;
}

static std::string      toString(unsigned int const &val) {
	std::stringstream   ss;
    ss << val;

	std::string         res;
    ss >> res;
    return res;
}

static unsigned int		getRand(unsigned int const &seed) {
    struct timeval tp;
    gettimeofday(&tp, NULL);

    long int ms = tp.tv_usec;
    return (unsigned int)(ms % seed);
}
